#JSON# {"date":"14/04/2021 16:51:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 16:51:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 241ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 20ms. Found 4 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=bd6e7d93-00ee-3983-a1a4-a9b156bf8776","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:527721}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607747d9665c6859b1c20761', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:527720}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607747d8665c6859b1c20760', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:527722}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:527723}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nUsing generated security password: 95fd20f7-b55b-487b-be07-f2fbe0c5b4eb\n","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 16:51:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 16:51:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 9.247 seconds (JVM running for 10.338)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 17:23:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:527722}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 17:23:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:527723}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:46:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:46:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 310ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 31ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=b08ee39b-7121-3498-81e8-a3ef29b34896","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:46:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:46:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:46:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webApiService' defined in URL [jar:file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar!/br/com/b2sky/infra/api/WebApiService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blockingWebApiRepository': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDbFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]","log_level":"WARN","thread_name":"main","class":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext"}
#JSON# {"date":"14/04/2021 19:46:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Unexpected exception during asynchronous execution","log_level":"ERROR","thread_name":"cluster-607770b0e1593b0f9c2abc7e","class":"org.springframework.data.mongodb.core.ReactiveMongoTemplate","throwable":{"stacktrace":"at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:138)\nat org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2777)\nat org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$87(ReactiveMongoTemplate.java:2760)\nat reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:6504)\nat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88)\nat reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:247)\nat com.mongodb.reactivestreams.client.internal.SingleResultObservableToPublisher$1.onError(SingleResultObservableToPublisher.java:50)\nat com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onError(ObservableToPublisher.java:71)\nat com.mongodb.async.client.AbstractSubscription.onError(AbstractSubscription.java:129)\nat com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:42)\nat com.mongodb.async.client.MongoCollectionImpl$7.onResult(MongoCollectionImpl.java:921)\nat com.mongodb.async.client.MongoCollectionImpl$7.onResult(MongoCollectionImpl.java:917)\nat com.mongodb.async.client.MongoCollectionImpl$9.onResult(MongoCollectionImpl.java:980)\nat com.mongodb.async.client.MongoCollectionImpl$9.onResult(MongoCollectionImpl.java:976)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.async.client.OperationExecutorImpl$2$1$1.onResult(OperationExecutorImpl.java:140)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.operation.CreateIndexesOperation$2.call(CreateIndexesOperation.java:194)\nat com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionCallback.onResult(OperationHelper.java:569)\nat com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionCallback.onResult(OperationHelper.java:561)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.binding.AsyncClusterBinding$1.onResult(AsyncClusterBinding.java:111)\nat com.mongodb.binding.AsyncClusterBinding$1.onResult(AsyncClusterBinding.java:107)\nat com.mongodb.internal.connection.BaseCluster$ServerSelectionRequest.onResult(BaseCluster.java:440)\nat com.mongodb.internal.connection.BaseCluster$WaitQueueHandler.run(BaseCluster.java:512)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"org.springframework.data.mongodb.UncategorizedMongoDbException","exception_message":"Shutdown in progress; nested exception is com.mongodb.MongoClientException: Shutdown in progress"}}
#JSON# {"date":"14/04/2021 19:46:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener"}
#JSON# {"date":"14/04/2021 19:46:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Application run failed","log_level":"ERROR","thread_name":"main","class":"org.springframework.boot.SpringApplication","throwable":{"stacktrace":"at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)\nat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:228)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\nat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\nat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\nat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\nat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\nat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:895)\nat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)\nat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)\nat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)\nat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\nat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)\nat br.com.b2sky.infra.StarWarApplication.main(StarWarApplication.java:18)","exception_class":"org.springframework.beans.factory.UnsatisfiedDependencyException","exception_message":"Error creating bean with name 'webApiService' defined in URL [jar:file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar!/br/com/b2sky/infra/api/WebApiService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blockingWebApiRepository': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDbFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]"}}
#JSON# {"date":"14/04/2021 19:48:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:48:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 394ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 38ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=b08ee39b-7121-3498-81e8-a3ef29b34896","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:48:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:48:44.044","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532086}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077714a5367bf278a96b9bb', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:45.045","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532087}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077714b5367bf278a96b9bc', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:45.045","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532092}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532091}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nUsing generated security password: 6605c2ee-6b10-4d25-ae02-cff5fa0f16c3\n","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"}
#JSON# {"date":"14/04/2021 19:48:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:48:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:48:52.052","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 16.432 seconds (JVM running for 17.819)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:49:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 290ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 28ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:55.055","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=b08ee39b-7121-3498-81e8-a3ef29b34896","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:49:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532122}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777195ff656c3c8b526920', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:49:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532121}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777195ff656c3c8b52691f', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:49:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:49:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532123}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:49:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:50:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532124}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:50:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nUsing generated security password: 5d51d198-e638-4687-85e7-7acd02b093b0\n","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"}
#JSON# {"date":"14/04/2021 19:50:01.001","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:50:02.002","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:50:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 11.455 seconds (JVM running for 12.949)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:52:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 312ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 26ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:36.036","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:52:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532201}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772379267196e86e8a5ed', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532200}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772369267196e86e8a5ec', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:52:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532202}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:52:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532203}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:52:44.044","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:52:44.044","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 12.323 seconds (JVM running for 14.07)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:52:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[da1d911f-1]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.result.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:96)","exception_class":"org.springframework.web.server.ServerErrorException","exception_message":"500 INTERNAL_SERVER_ERROR \"id\""}}
#JSON# {"date":"14/04/2021 19:53:47.047","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:53:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 315ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 27ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:53:52.052","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:53:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532236}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777280ef66234aef09b5af', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532237}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077727fef66234aef09b5ae', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:53:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532238}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532239}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:53:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:53:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 14.853 seconds (JVM running for 17.009)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:54:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 403ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 26ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:54:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:54:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532247}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772a9525d587a7102558b', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532246}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772a9525d587a7102558a', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:54:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532248}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532249}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:54:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:54:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 13.809 seconds (JVM running for 15.606)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:55:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-1]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"nioEventLoopGroup-2-2","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:102)","exception_class":"java.util.NoSuchElementException","exception_message":"Flux#last() didn't observe any onNext signal"}}
#JSON# {"date":"14/04/2021 19:55:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-2]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 19:58:22.022","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-3]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-1","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:01:46.046","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-4]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-2","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:02:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-5]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:03:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-6]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:04:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-7]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:07:36.036","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 260ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 22ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:07:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532559}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607775bb2e32ed68063a66f9', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532558}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607775bb2e32ed68063a66f8', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:07:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:07:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532560}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:42.042","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532561}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:42.042","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:07:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:07:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 8.399 seconds (JVM running for 9.705)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:19:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:532561}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:532560}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 236ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 20ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532803}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607778705cf93947c14b0ed3', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532802}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607778705cf93947c14b0ed2', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532804}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:19:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532807}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:15.015","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:19:16.016","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:19:17.017","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 8.506 seconds (JVM running for 9.555)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:24:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 225ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 21ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:24:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532909}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779ab1423264361880853', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532910}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779ab1423264361880854', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:24:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532912}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:24:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532914}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:24:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener"}
#JSON# {"date":"14/04/2021 20:24:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:532914}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:532912}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nWeb server failed to start. Port 8080 was already in use.\n\nAction:\n\nIdentify and stop the process that's listening on port 8080 or configure this application to listen on another port.\n","log_level":"ERROR","thread_name":"main","class":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter"}
#JSON# {"date":"14/04/2021 20:24:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:532807}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:532804}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:25:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 381ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 39ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:25:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532921}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779d49e4c39264cc6f0c8', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532920}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779d39e4c39264cc6f0c7', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:25:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532923}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:25:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532927}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:12.012","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:25:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:25:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 13.943 seconds (JVM running for 17.431)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:25:33.033","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:25:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-1","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:26:02.002","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-2","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:26:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:26:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:29:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:532927}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:29:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:532923}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:31:22.022","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:31:23.023","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:31:23.023","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 299ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:31:23.023","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:31:23.023","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 24ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:31:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:31:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:533060}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777b4da0299609db72fd9c', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:31:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:533059}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777b4da0299609db72fd9b', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:31:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:31:26.026","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:533061}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:31:26.026","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:31:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:533062}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:31:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:31:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:31:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 9.385 seconds (JVM running for 10.61)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:33:12.012","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:533062}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:33:12.012","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:533061}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:35:23.023","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:35:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:35:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 256ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:35:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:35:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 22ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:35:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:35:26.026","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:533150}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777c3ee1e2b62288e0cf38', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:35:26.026","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:533149}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777c3ee1e2b62288e0cf37', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:35:26.026","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:35:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:533151}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:35:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:35:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:533153}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:35:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:35:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:35:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 8.7 seconds (JVM running for 9.909)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:37:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:37:45.045","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-1","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:40:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:533153}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:40:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:533151}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:43:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:44:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:44:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 244ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:44:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:44:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 22ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:44:01.001","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:44:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:533311}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777e43768ba632b528fb1e', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:44:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:533310}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777e42768ba632b528fb1d', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:44:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:44:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:533312}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:44:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:44:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:533313}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:44:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:44:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:44:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 9.289 seconds (JVM running for 10.489)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:46:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:46:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:46:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 221ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:46:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:46:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 23ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:46:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:46:32.032","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:46:32.032","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:533363}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777ed706a59827615e82c4', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:46:32.032","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:533364}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777ed806a59827615e82c5', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:46:33.033","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:533366}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:46:33.033","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:46:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:533369}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:46:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:46:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:46:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 10.198 seconds (JVM running for 11.692)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:48:32.032","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-1","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:65)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:59)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:34)\nat br.com.b2sky.infra.service.PlanetService.findAndSave(PlanetService.java:46)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:52:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:52:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:52:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 284ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:52:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:52:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 21ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:52:26.026","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:52:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:52:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:533478}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077803bf266a227a4b1a921', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:52:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:533479}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077803bf266a227a4b1a920', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:52:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:533480}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:52:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:52:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:533482}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:52:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:52:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:52:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 9.111 seconds (JVM running for 10.306)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:53:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:53:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:53:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 227ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:53:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:53:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 23ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:53:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:53:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:533510}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607780664bcc8449aac095f2', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:53:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:533509}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607780664bcc8449aac095f1', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:53:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:53:12.012","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:533512}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:53:12.012","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:53:12.012","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:533513}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:53:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:53:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:53:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 8.778 seconds (JVM running for 10.192)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:54:01.001","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:56)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:50)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:34)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:57:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:57:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:57:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 297ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:57:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:57:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 22ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:57:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:57:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:57:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:533578}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077818114325026d42f3b38', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:57:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:533577}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077818014325026d42f3b37', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:57:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:57:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:533579}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:57:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:533580}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:57:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:57:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:57:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 10.8 seconds (JVM running for 12.141)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:26:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:26:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:26:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 203ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:26:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:26:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 21ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:26:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 21:26:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:534158}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077881e513bec1d8cf67394', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:26:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:534159}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077881e513bec1d8cf67395', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:26:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:26:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:534160}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:26:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:26:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:534161}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:26:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 21:26:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 21:26:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 7.816 seconds (JVM running for 9.116)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:26:20.020","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:60)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:54)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:36)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 21:30:16.016","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:534161}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:30:16.016","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:534160}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:30:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:30:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:30:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 307ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:30:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:30:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 35ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:30:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 21:30:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:534250}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778927c5dc932b4c0d7776', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:30:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:534251}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778927c5dc932b4c0d7777', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:30:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:30:32.032","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:534252}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:30:33.033","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:30:33.033","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:534254}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:30:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 21:30:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 21:30:36.036","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 10.274 seconds (JVM running for 11.753)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:34:33.033","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:34:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:34:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 276ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:34:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:34:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 21ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:34:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 21:34:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:34:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:534334}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778a1dfdeac20541fa21c0', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:34:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:534333}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778a1cfdeac20541fa21bf', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:34:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:34:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:534335}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:34:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:534336}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:34:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 21:34:42.042","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 21:34:42.042","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 10.547 seconds (JVM running for 11.771)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:42:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:42:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:42:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 224ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:42:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:42:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 23ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:43:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 21:43:01.001","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:534498}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778c159e8ff80159d33529', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:43:01.001","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:534499}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778c159e8ff80159d3352a', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:43:02.002","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:43:02.002","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:534500}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:43:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:43:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:534501}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:43:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 21:43:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 21:43:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 8.388 seconds (JVM running for 9.677)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:48:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:534501}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:48:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:534500}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:48:47.047","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 266ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 22ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 21:48:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 21:48:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:534623}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778d72178b08719b1edf6a', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:48:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:534622}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60778d72178b08719b1edf69', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:48:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:48:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:534624}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:48:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 21:48:52.052","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:534625}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:48:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 21:48:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 21:48:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 7.921 seconds (JVM running for 9.045)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 21:49:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[fd528719-1]  500 Server Error for HTTP GET \"/planets\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at br.com.b2sky.infra.controller.PlanetController.nameToSearch(PlanetController.java:73)","exception_class":"java.lang.NullPointerException"}}
#JSON# {"date":"14/04/2021 21:49:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:534625}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 21:49:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:534624}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 22:07:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 22:07:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 22:07:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 205ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 22:07:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 22:07:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 22ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 22:07:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 22:07:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:534985}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607791bb851169658540635a', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 22:07:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:534984}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607791ba8511696585406359', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 22:07:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 22:07:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:534986}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 22:07:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 22:07:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:534988}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 22:07:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 22:07:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 22:07:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 7.367 seconds (JVM running for 8.663)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 22:09:47.047","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:534988}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 22:09:47.047","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:534986}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"15/04/2021 14:17:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Application started with classpath: [file:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar, file:/home/luiz.philip/eclipse-workspace/starWarApi/target/classes/, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.2.7.RELEASE/spring-boot-starter-actuator-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.7.RELEASE/spring-boot-starter-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot/2.2.7.RELEASE/spring-boot-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.7.RELEASE/spring-boot-autoconfigure-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.2.7.RELEASE/spring-boot-starter-logging-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.12.1/log4j-to-slf4j-2.12.1.jar, file:/home/luiz.philip/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar, file:/home/luiz.philip/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar, file:/home/luiz.philip/.m2/repository/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.2.7.RELEASE/spring-boot-actuator-autoconfigure-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-actuator/2.2.7.RELEASE/spring-boot-actuator-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-context/5.2.6.RELEASE/spring-context-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.4/jackson-datatype-jsr310-2.10.4.jar, file:/home/luiz.philip/.m2/repository/io/micrometer/micrometer-core/1.3.8/micrometer-core-1.3.8.jar, file:/home/luiz.philip/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.jar, file:/home/luiz.philip/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/2.2.7.RELEASE/spring-boot-starter-webflux-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.7.RELEASE/spring-boot-starter-json-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.4/jackson-module-parameter-names-2.10.4.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/2.2.7.RELEASE/spring-boot-starter-reactor-netty-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/io/projectreactor/netty/reactor-netty/0.9.7.RELEASE/reactor-netty-0.9.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec-http/4.1.49.Final/netty-codec-http-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-common/4.1.49.Final/netty-common-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-buffer/4.1.49.Final/netty-buffer-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-transport/4.1.49.Final/netty-transport-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec/4.1.49.Final/netty-codec-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec-http2/4.1.49.Final/netty-codec-http2-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-handler/4.1.49.Final/netty-handler-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-resolver/4.1.49.Final/netty-resolver-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-handler-proxy/4.1.49.Final/netty-handler-proxy-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec-socks/4.1.49.Final/netty-codec-socks-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-transport-native-epoll/4.1.49.Final/netty-transport-native-epoll-4.1.49.Final-linux-x86_64.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.49.Final/netty-transport-native-unix-common-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.7.RELEASE/spring-boot-starter-validation-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, file:/home/luiz.philip/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.19.Final/hibernate-validator-6.0.19.Final.jar, file:/home/luiz.philip/.m2/repository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-web/5.2.6.RELEASE/spring-web-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-beans/5.2.6.RELEASE/spring-beans-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-webflux/5.2.6.RELEASE/spring-webflux-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/synchronoss/cloud/nio-multipart-parser/1.1.0/nio-multipart-parser-1.1.0.jar, file:/home/luiz.philip/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar, file:/home/luiz.philip/.m2/repository/org/synchronoss/cloud/nio-stream-storage/1.1.3/nio-stream-storage-1.1.3.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb-reactive/2.2.7.RELEASE/spring-boot-starter-data-mongodb-reactive-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/data/spring-data-mongodb/2.2.7.RELEASE/spring-data-mongodb-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-tx/5.2.6.RELEASE/spring-tx-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-expression/5.2.6.RELEASE/spring-expression-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/data/spring-data-commons/2.2.7.RELEASE/spring-data-commons-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver/3.11.2/mongodb-driver-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/bson/3.11.2/bson-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver-core/3.11.2/mongodb-driver-core-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver-async/3.11.2/mongodb-driver-async-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver-reactivestreams/1.12.0/mongodb-driver-reactivestreams-1.12.0.jar, file:/home/luiz.philip/.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar, file:/home/luiz.philip/.m2/repository/io/projectreactor/reactor-core/3.3.5.RELEASE/reactor-core-3.3.5.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb/2.2.7.RELEASE/spring-boot-starter-data-mongodb-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-starter-sleuth/2.2.3.RELEASE/spring-cloud-starter-sleuth-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-starter/2.2.3.RELEASE/spring-cloud-starter-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-context/2.2.3.RELEASE/spring-cloud-context-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/security/spring-security-crypto/5.2.4.RELEASE/spring-security-crypto-5.2.4.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-commons/2.2.3.RELEASE/spring-cloud-commons-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/security/spring-security-rsa/1.0.9.RELEASE/spring-security-rsa-1.0.9.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.64/bcpkix-jdk15on-1.64.jar, file:/home/luiz.philip/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.7.RELEASE/spring-boot-starter-aop-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-aop/5.2.6.RELEASE/spring-aop-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-sleuth-core/2.2.3.RELEASE/spring-cloud-sleuth-core-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/aspectj/aspectjrt/1.9.5/aspectjrt-1.9.5.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave/5.12.3/brave-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.15.0/zipkin-reporter-brave-2.15.0.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.12.3/brave-context-slf4j-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-messaging/5.12.3/brave-instrumentation-messaging-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-rpc/5.12.3/brave-instrumentation-rpc-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-spring-web/5.12.3/brave-instrumentation-spring-web-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.12.3/brave-instrumentation-http-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-spring-rabbit/5.12.3/brave-instrumentation-spring-rabbit-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-kafka-clients/5.12.3/brave-instrumentation-kafka-clients-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-kafka-streams/5.12.3/brave-instrumentation-kafka-streams-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-httpclient/5.12.3/brave-instrumentation-httpclient-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-httpasyncclient/5.12.3/brave-instrumentation-httpasyncclient-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-spring-webmvc/5.12.3/brave-instrumentation-spring-webmvc-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-servlet/5.12.3/brave-instrumentation-servlet-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-jms/5.12.3/brave-instrumentation-jms-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/reporter2/zipkin-reporter-metrics-micrometer/2.15.0/zipkin-reporter-metrics-micrometer-2.15.0.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.15.0/zipkin-reporter-2.15.0.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/zipkin2/zipkin/2.21.1/zipkin-2.21.1.jar, file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar, file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core-beans/2.3.13.AWS.RELEASE/b2sky-core-beans-2.3.13.AWS.RELEASE.jar, file:/home/luiz.philip/.m2/repository/io/projectreactor/addons/reactor-extra/3.3.3.RELEASE/reactor-extra-3.3.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.4/jackson-databind-2.10.4.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.4/jackson-annotations-2.10.4.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.4/jackson-core-2.10.4.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.4/jackson-datatype-jdk8-2.10.4.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/sonar/sonar-maven-plugin/3.7.4/sonar-maven-plugin-3.7.4.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/shared/maven-dependency-tree/2.1/maven-dependency-tree-2.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-project/2.2.0/maven-project-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-settings/2.2.0/maven-settings-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-profile/2.2.0/maven-profile-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-model/2.2.0/maven-model-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-artifact-manager/2.2.0/maven-artifact-manager-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-repository-metadata/2.2.0/maven-repository-metadata-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-6/wagon-provider-api-1.0-beta-6.jar, file:/home/luiz.philip/.m2/repository/backport-util-concurrent/backport-util-concurrent/3.1/backport-util-concurrent-3.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-plugin-registry/2.2.0/maven-plugin-registry-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.11/plexus-interpolation-1.11.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.15/plexus-utils-1.5.15.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-artifact/2.2.0/maven-artifact-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, file:/home/luiz.philip/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/sonar/runner/sonar-runner-api/2.3/sonar-runner-api-2.3.jar, file:/home/luiz.philip/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar, file:/home/luiz.philip/.m2/repository/junit/junit/4.12/junit-4.12.jar, file:/home/luiz.philip/.m2/repository/org/hamcrest/hamcrest-core/2.1/hamcrest-core-2.1.jar, file:/home/luiz.philip/.m2/repository/com/newrelic/agent/java/newrelic-api/4.2.0/newrelic-api-4.2.0.jar, file:/home/luiz.philip/.m2/repository/com/squareup/okhttp3/mockwebserver/3.14.8/mockwebserver-3.14.8.jar, file:/home/luiz.philip/.m2/repository/com/squareup/okhttp3/okhttp/3.14.8/okhttp-3.14.8.jar, file:/home/luiz.philip/.m2/repository/com/squareup/okio/okio/1.17.2/okio-1.17.2.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/janino/janino/3.0.7/janino-3.0.7.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/janino/commons-compiler/3.1.2/commons-compiler-3.1.2.jar, file:/home/luiz.philip/.m2/repository/com/b2winc/corporateservices-log/3.2.1/corporateservices-log-3.2.1.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/module/jackson-module-afterburner/2.10.4/jackson-module-afterburner-2.10.4.jar, file:/home/luiz.philip/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, file:/home/luiz.philip/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-web/2.12.1/log4j-web-2.12.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-api/2.12.1/log4j-api-2.12.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-core/2.12.1/log4j-core-2.12.1.jar, file:/home/luiz.philip/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar, file:/home/luiz.philip/.m2/repository/org/projectlombok/lombok/1.18.16/lombok-1.18.16.jar, file:/home/luiz.philip/.m2/repository/org/modelmapper/modelmapper/2.4.0/modelmapper-2.4.0.jar, file:/home/luiz.philip/.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-core/5.2.6.RELEASE/spring-core-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-jcl/5.2.6.RELEASE/spring-jcl-5.2.6.RELEASE.jar]","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.context.logging.ClasspathLoggingApplicationListener"}
#JSON# {"date":"15/04/2021 14:17:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: dev","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"15/04/2021 14:17:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Loading source class br.com.b2sky.infra.StarWarApplication,class org.springframework.cloud.bootstrap.BootstrapApplicationListener$BootstrapMarkerConfiguration","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.SpringApplication"}
#JSON# {"date":"15/04/2021 14:17:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Activated activeProfiles dev","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.context.config.ConfigFileApplicationListener"}
#JSON# {"date":"15/04/2021 14:17:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Profiles already activated, '[dev]' will not be applied","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.context.config.ConfigFileApplicationListener"}
#JSON# {"date":"15/04/2021 14:17:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Loaded config file 'file:/home/luiz.philip/eclipse-workspace/starWarApi/target/classes/application.properties' (classpath:/application.properties)","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.context.config.ConfigFileApplicationListener"}
#JSON# {"date":"15/04/2021 14:17:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Loaded config file 'file:/home/luiz.philip/eclipse-workspace/starWarApi/target/classes/application-dev.properties' (classpath:/application-dev.properties) for profile dev","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.context.config.ConfigFileApplicationListener"}
#JSON# {"date":"15/04/2021 14:17:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Refreshing org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext@6b44435b","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext"}
#JSON# {"date":"15/04/2021 14:17:15.015","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"15/04/2021 14:17:18.018","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 2102ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"15/04/2021 14:17:18.018","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"15/04/2021 14:17:18.018","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 27ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"15/04/2021 14:17:20.020","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=31edf8af-eab5-3273-953a-cd3d89bb9531","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"15/04/2021 14:17:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"@EnableAutoConfiguration was declared on a class in the package 'br.com.b2sky.infra'. Automatic @Repository and @Entity scanning is enabled.","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.autoconfigure.AutoConfigurationPackages"}
#JSON# {"date":"15/04/2021 14:17:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"15/04/2021 14:17:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"15/04/2021 14:17:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webApiService' defined in URL [jar:file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar!/br/com/b2sky/infra/api/WebApiService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blockingWebApiRepository': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDbFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]","log_level":"WARN","thread_name":"main","class":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext"}
#JSON# {"date":"15/04/2021 14:17:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Unexpected exception during asynchronous execution","log_level":"ERROR","thread_name":"cluster-607875237b8bd062f1dbbabc","class":"org.springframework.data.mongodb.core.ReactiveMongoTemplate","throwable":{"stacktrace":"at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:138)\nat org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2777)\nat org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$87(ReactiveMongoTemplate.java:2760)\nat reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:6504)\nat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88)\nat reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:247)\nat com.mongodb.reactivestreams.client.internal.SingleResultObservableToPublisher$1.onError(SingleResultObservableToPublisher.java:50)\nat com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onError(ObservableToPublisher.java:71)\nat com.mongodb.async.client.AbstractSubscription.onError(AbstractSubscription.java:129)\nat com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:42)\nat com.mongodb.async.client.MongoCollectionImpl$7.onResult(MongoCollectionImpl.java:921)\nat com.mongodb.async.client.MongoCollectionImpl$7.onResult(MongoCollectionImpl.java:917)\nat com.mongodb.async.client.MongoCollectionImpl$9.onResult(MongoCollectionImpl.java:980)\nat com.mongodb.async.client.MongoCollectionImpl$9.onResult(MongoCollectionImpl.java:976)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.async.client.OperationExecutorImpl$2$1$1.onResult(OperationExecutorImpl.java:140)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.operation.CreateIndexesOperation$2.call(CreateIndexesOperation.java:194)\nat com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionCallback.onResult(OperationHelper.java:569)\nat com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionCallback.onResult(OperationHelper.java:561)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.binding.AsyncClusterBinding$1.onResult(AsyncClusterBinding.java:111)\nat com.mongodb.binding.AsyncClusterBinding$1.onResult(AsyncClusterBinding.java:107)\nat com.mongodb.internal.connection.BaseCluster$ServerSelectionRequest.onResult(BaseCluster.java:440)\nat com.mongodb.internal.connection.BaseCluster$WaitQueueHandler.run(BaseCluster.java:512)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"org.springframework.data.mongodb.UncategorizedMongoDbException","exception_message":"Shutdown in progress; nested exception is com.mongodb.MongoClientException: Shutdown in progress"}}
#JSON# {"date":"15/04/2021 14:17:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Application failed to start with classpath: [file:/usr/lib/jvm/java-8-oracle/jre/lib/resources.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/rt.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/jsse.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/jce.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/charsets.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/jfr.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunec.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/zipfs.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/localedata.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jaccess.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunjce_provider.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/sunpkcs11.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/cldrdata.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/nashorn.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/jfxrt.jar, file:/usr/lib/jvm/java-8-oracle/jre/lib/ext/dnsns.jar, file:/home/luiz.philip/eclipse-workspace/starWarApi/target/classes/, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-actuator/2.2.7.RELEASE/spring-boot-starter-actuator-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter/2.2.7.RELEASE/spring-boot-starter-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot/2.2.7.RELEASE/spring-boot-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-autoconfigure/2.2.7.RELEASE/spring-boot-autoconfigure-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-logging/2.2.7.RELEASE/spring-boot-starter-logging-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-to-slf4j/2.12.1/log4j-to-slf4j-2.12.1.jar, file:/home/luiz.philip/.m2/repository/org/slf4j/jul-to-slf4j/1.7.30/jul-to-slf4j-1.7.30.jar, file:/home/luiz.philip/.m2/repository/jakarta/annotation/jakarta.annotation-api/1.3.5/jakarta.annotation-api-1.3.5.jar, file:/home/luiz.philip/.m2/repository/org/yaml/snakeyaml/1.25/snakeyaml-1.25.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-actuator-autoconfigure/2.2.7.RELEASE/spring-boot-actuator-autoconfigure-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-actuator/2.2.7.RELEASE/spring-boot-actuator-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-context/5.2.6.RELEASE/spring-context-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jsr310/2.10.4/jackson-datatype-jsr310-2.10.4.jar, file:/home/luiz.philip/.m2/repository/io/micrometer/micrometer-core/1.3.8/micrometer-core-1.3.8.jar, file:/home/luiz.philip/.m2/repository/org/hdrhistogram/HdrHistogram/2.1.11/HdrHistogram-2.1.11.jar, file:/home/luiz.philip/.m2/repository/org/latencyutils/LatencyUtils/2.0.3/LatencyUtils-2.0.3.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-webflux/2.2.7.RELEASE/spring-boot-starter-webflux-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-json/2.2.7.RELEASE/spring-boot-starter-json-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/module/jackson-module-parameter-names/2.10.4/jackson-module-parameter-names-2.10.4.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-reactor-netty/2.2.7.RELEASE/spring-boot-starter-reactor-netty-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/io/projectreactor/netty/reactor-netty/0.9.7.RELEASE/reactor-netty-0.9.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec-http/4.1.49.Final/netty-codec-http-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-common/4.1.49.Final/netty-common-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-buffer/4.1.49.Final/netty-buffer-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-transport/4.1.49.Final/netty-transport-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec/4.1.49.Final/netty-codec-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec-http2/4.1.49.Final/netty-codec-http2-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-handler/4.1.49.Final/netty-handler-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-resolver/4.1.49.Final/netty-resolver-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-handler-proxy/4.1.49.Final/netty-handler-proxy-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-codec-socks/4.1.49.Final/netty-codec-socks-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-transport-native-epoll/4.1.49.Final/netty-transport-native-epoll-4.1.49.Final-linux-x86_64.jar, file:/home/luiz.philip/.m2/repository/io/netty/netty-transport-native-unix-common/4.1.49.Final/netty-transport-native-unix-common-4.1.49.Final.jar, file:/home/luiz.philip/.m2/repository/org/glassfish/jakarta.el/3.0.3/jakarta.el-3.0.3.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-validation/2.2.7.RELEASE/spring-boot-starter-validation-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/jakarta/validation/jakarta.validation-api/2.0.2/jakarta.validation-api-2.0.2.jar, file:/home/luiz.philip/.m2/repository/org/hibernate/validator/hibernate-validator/6.0.19.Final/hibernate-validator-6.0.19.Final.jar, file:/home/luiz.philip/.m2/repository/org/jboss/logging/jboss-logging/3.4.1.Final/jboss-logging-3.4.1.Final.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/classmate/1.5.1/classmate-1.5.1.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-web/5.2.6.RELEASE/spring-web-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-beans/5.2.6.RELEASE/spring-beans-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-webflux/5.2.6.RELEASE/spring-webflux-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/synchronoss/cloud/nio-multipart-parser/1.1.0/nio-multipart-parser-1.1.0.jar, file:/home/luiz.philip/.m2/repository/org/slf4j/slf4j-api/1.7.30/slf4j-api-1.7.30.jar, file:/home/luiz.philip/.m2/repository/org/synchronoss/cloud/nio-stream-storage/1.1.3/nio-stream-storage-1.1.3.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb-reactive/2.2.7.RELEASE/spring-boot-starter-data-mongodb-reactive-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/data/spring-data-mongodb/2.2.7.RELEASE/spring-data-mongodb-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-tx/5.2.6.RELEASE/spring-tx-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-expression/5.2.6.RELEASE/spring-expression-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/data/spring-data-commons/2.2.7.RELEASE/spring-data-commons-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver/3.11.2/mongodb-driver-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/bson/3.11.2/bson-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver-core/3.11.2/mongodb-driver-core-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver-async/3.11.2/mongodb-driver-async-3.11.2.jar, file:/home/luiz.philip/.m2/repository/org/mongodb/mongodb-driver-reactivestreams/1.12.0/mongodb-driver-reactivestreams-1.12.0.jar, file:/home/luiz.philip/.m2/repository/org/reactivestreams/reactive-streams/1.0.3/reactive-streams-1.0.3.jar, file:/home/luiz.philip/.m2/repository/io/projectreactor/reactor-core/3.3.5.RELEASE/reactor-core-3.3.5.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-data-mongodb/2.2.7.RELEASE/spring-boot-starter-data-mongodb-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-starter-sleuth/2.2.3.RELEASE/spring-cloud-starter-sleuth-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-starter/2.2.3.RELEASE/spring-cloud-starter-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-context/2.2.3.RELEASE/spring-cloud-context-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/security/spring-security-crypto/5.2.4.RELEASE/spring-security-crypto-5.2.4.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-commons/2.2.3.RELEASE/spring-cloud-commons-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/security/spring-security-rsa/1.0.9.RELEASE/spring-security-rsa-1.0.9.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/bouncycastle/bcpkix-jdk15on/1.64/bcpkix-jdk15on-1.64.jar, file:/home/luiz.philip/.m2/repository/org/bouncycastle/bcprov-jdk15on/1.64/bcprov-jdk15on-1.64.jar, file:/home/luiz.philip/.m2/repository/org/springframework/boot/spring-boot-starter-aop/2.2.7.RELEASE/spring-boot-starter-aop-2.2.7.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-aop/5.2.6.RELEASE/spring-aop-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/aspectj/aspectjweaver/1.9.5/aspectjweaver-1.9.5.jar, file:/home/luiz.philip/.m2/repository/org/springframework/cloud/spring-cloud-sleuth-core/2.2.3.RELEASE/spring-cloud-sleuth-core-2.2.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/aspectj/aspectjrt/1.9.5/aspectjrt-1.9.5.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave/5.12.3/brave-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/reporter2/zipkin-reporter-brave/2.15.0/zipkin-reporter-brave-2.15.0.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-context-slf4j/5.12.3/brave-context-slf4j-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-messaging/5.12.3/brave-instrumentation-messaging-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-rpc/5.12.3/brave-instrumentation-rpc-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-spring-web/5.12.3/brave-instrumentation-spring-web-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-http/5.12.3/brave-instrumentation-http-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-spring-rabbit/5.12.3/brave-instrumentation-spring-rabbit-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-kafka-clients/5.12.3/brave-instrumentation-kafka-clients-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-kafka-streams/5.12.3/brave-instrumentation-kafka-streams-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-httpclient/5.12.3/brave-instrumentation-httpclient-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-httpasyncclient/5.12.3/brave-instrumentation-httpasyncclient-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-spring-webmvc/5.12.3/brave-instrumentation-spring-webmvc-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-servlet/5.12.3/brave-instrumentation-servlet-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/brave/brave-instrumentation-jms/5.12.3/brave-instrumentation-jms-5.12.3.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/reporter2/zipkin-reporter-metrics-micrometer/2.15.0/zipkin-reporter-metrics-micrometer-2.15.0.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/reporter2/zipkin-reporter/2.15.0/zipkin-reporter-2.15.0.jar, file:/home/luiz.philip/.m2/repository/io/zipkin/zipkin2/zipkin/2.21.1/zipkin-2.21.1.jar, file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar, file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core-beans/2.3.13.AWS.RELEASE/b2sky-core-beans-2.3.13.AWS.RELEASE.jar, file:/home/luiz.philip/.m2/repository/io/projectreactor/addons/reactor-extra/3.3.3.RELEASE/reactor-extra-3.3.3.RELEASE.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/core/jackson-databind/2.10.4/jackson-databind-2.10.4.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/core/jackson-annotations/2.10.4/jackson-annotations-2.10.4.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/core/jackson-core/2.10.4/jackson-core-2.10.4.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/datatype/jackson-datatype-jdk8/2.10.4/jackson-datatype-jdk8-2.10.4.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/sonar/sonar-maven-plugin/3.7.4/sonar-maven-plugin-3.7.4.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/shared/maven-dependency-tree/2.1/maven-dependency-tree-2.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-project/2.2.0/maven-project-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-settings/2.2.0/maven-settings-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-profile/2.2.0/maven-profile-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-model/2.2.0/maven-model-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-artifact-manager/2.2.0/maven-artifact-manager-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-repository-metadata/2.2.0/maven-repository-metadata-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/wagon/wagon-provider-api/1.0-beta-6/wagon-provider-api-1.0-beta-6.jar, file:/home/luiz.philip/.m2/repository/backport-util-concurrent/backport-util-concurrent/3.1/backport-util-concurrent-3.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-plugin-registry/2.2.0/maven-plugin-registry-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-interpolation/1.11/plexus-interpolation-1.11.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-utils/1.5.15/plexus-utils-1.5.15.jar, file:/home/luiz.philip/.m2/repository/org/apache/maven/maven-artifact/2.2.0/maven-artifact-2.2.0.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-container-default/1.0-alpha-9-stable-1/plexus-container-default-1.0-alpha-9-stable-1.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/plexus/plexus-component-annotations/1.5.5/plexus-component-annotations-1.5.5.jar, file:/home/luiz.philip/.m2/repository/org/eclipse/aether/aether-util/0.9.0.M2/aether-util-0.9.0.M2.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/sonar/runner/sonar-runner-api/2.3/sonar-runner-api-2.3.jar, file:/home/luiz.philip/.m2/repository/org/apache/commons/commons-lang3/3.9/commons-lang3-3.9.jar, file:/home/luiz.philip/.m2/repository/junit/junit/4.12/junit-4.12.jar, file:/home/luiz.philip/.m2/repository/org/hamcrest/hamcrest-core/2.1/hamcrest-core-2.1.jar, file:/home/luiz.philip/.m2/repository/com/newrelic/agent/java/newrelic-api/4.2.0/newrelic-api-4.2.0.jar, file:/home/luiz.philip/.m2/repository/com/squareup/okhttp3/mockwebserver/3.14.8/mockwebserver-3.14.8.jar, file:/home/luiz.philip/.m2/repository/com/squareup/okhttp3/okhttp/3.14.8/okhttp-3.14.8.jar, file:/home/luiz.philip/.m2/repository/com/squareup/okio/okio/1.17.2/okio-1.17.2.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/janino/janino/3.0.7/janino-3.0.7.jar, file:/home/luiz.philip/.m2/repository/org/codehaus/janino/commons-compiler/3.1.2/commons-compiler-3.1.2.jar, file:/home/luiz.philip/.m2/repository/com/b2winc/corporateservices-log/3.2.1/corporateservices-log-3.2.1.jar, file:/home/luiz.philip/.m2/repository/com/fasterxml/jackson/module/jackson-module-afterburner/2.10.4/jackson-module-afterburner-2.10.4.jar, file:/home/luiz.philip/.m2/repository/ch/qos/logback/logback-classic/1.2.3/logback-classic-1.2.3.jar, file:/home/luiz.philip/.m2/repository/ch/qos/logback/logback-core/1.2.3/logback-core-1.2.3.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-web/2.12.1/log4j-web-2.12.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-api/2.12.1/log4j-api-2.12.1.jar, file:/home/luiz.philip/.m2/repository/org/apache/logging/log4j/log4j-core/2.12.1/log4j-core-2.12.1.jar, file:/home/luiz.philip/.m2/repository/com/google/code/gson/gson/2.8.6/gson-2.8.6.jar, file:/home/luiz.philip/.m2/repository/org/projectlombok/lombok/1.18.16/lombok-1.18.16.jar, file:/home/luiz.philip/.m2/repository/org/modelmapper/modelmapper/2.4.0/modelmapper-2.4.0.jar, file:/home/luiz.philip/.m2/repository/org/hamcrest/hamcrest/2.1/hamcrest-2.1.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-core/5.2.6.RELEASE/spring-core-5.2.6.RELEASE.jar, file:/home/luiz.philip/.m2/repository/org/springframework/spring-jcl/5.2.6.RELEASE/spring-jcl-5.2.6.RELEASE.jar]","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.context.logging.ClasspathLoggingApplicationListener"}
#JSON# {"date":"15/04/2021 14:17:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\n\n============================\nCONDITIONS EVALUATION REPORT\n============================\n\n\nPositive matches:\n-----------------\n\n   AopAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.aop.auto=true) matched (OnPropertyCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration matched:\n      - @ConditionalOnClass found required class 'org.aspectj.weaver.Advice' (OnClassCondition)\n\n   AopAutoConfiguration.AspectJAutoProxyingConfiguration.CglibAutoProxyConfiguration matched:\n      - @ConditionalOnProperty (spring.aop.proxy-target-class=true) matched (OnPropertyCondition)\n\n   AsyncAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.sleuth.scheduled.enabled) matched (OnPropertyCondition)\n\n   AsyncDefaultAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.sleuth.async.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: brave.Tracing; SearchStrategy: all) found bean 'tracing' (OnBeanCondition)\n\n   AsyncDefaultAutoConfiguration#executorBeanPostProcessor matched:\n      - @ConditionalOnProperty (spring.sleuth.scheduled.enabled) matched (OnPropertyCondition)\n\n   AsyncDefaultAutoConfiguration.DefaultAsyncConfigurerSupport matched:\n      - @ConditionalOnProperty (spring.sleuth.async.configurer.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.scheduling.annotation.AsyncConfigurer; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   AutoServiceRegistrationAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)\n\n   AutoServiceRegistrationConfiguration matched:\n      - @ConditionalOnProperty (spring.cloud.service-registry.auto-registration.enabled) matched (OnPropertyCondition)\n\n   CacheMeterBinderProvidersConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.binder.MeterBinder' (OnClassCondition)\n\n   ClientHttpConnectorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   ClientHttpConnectorAutoConfiguration#clientConnectorCustomizer matched:\n      - @ConditionalOnBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) found bean 'reactorClientHttpConnector' (OnBeanCondition)\n\n   ClientHttpConnectorConfiguration.ReactorNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.client.HttpClient' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.reactive.ClientHttpConnector; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   CodecsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.http.codec.CodecConfigurer', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   CodecsAutoConfiguration.JacksonCodecConfiguration#jacksonCodecCustomizer matched:\n      - @ConditionalOnBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) found bean 'jacksonObjectMapper' (OnBeanCondition)\n\n   CommonsClientAutoConfiguration.ActuatorConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.endpoint.annotation.Endpoint' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.features.enabled) matched (OnPropertyCondition)\n\n   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.boot.actuate.health.HealthIndicator' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.blocking.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.DiscoveryClient; SearchStrategy: all) found beans 'simpleDiscoveryClient', 'compositeDiscoveryClient' (OnBeanCondition)\n\n   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryClientHealthIndicator matched:\n      - @ConditionalOnProperty (spring.cloud.discovery.client.health-indicator.enabled) matched (OnPropertyCondition)\n\n   CommonsClientAutoConfiguration.DiscoveryLoadBalancerConfiguration#discoveryCompositeHealthContributor matched:\n      - @ConditionalOnProperty (spring.cloud.discovery.client.composite-indicator.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.health.DiscoveryHealthIndicator; SearchStrategy: all) found bean 'discoveryClientHealthIndicator' (OnBeanCondition)\n\n   CompatibilityVerifierAutoConfiguration matched:\n      - @ConditionalOnProperty (spring.cloud.compatibility-verifier.enabled) matched (OnPropertyCondition)\n\n   CompositeMeterRegistryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.composite.CompositeMeterRegistry' (OnClassCondition)\n\n   ConfigurationPropertiesRebinderAutoConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor; SearchStrategy: all) found bean 'org.springframework.boot.context.properties.ConfigurationPropertiesBindingPostProcessor' (OnBeanCondition)\n\n   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesBeans matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesBeans; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ConfigurationPropertiesRebinderAutoConfiguration#configurationPropertiesRebinder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.properties.ConfigurationPropertiesRebinder; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   DiskSpaceHealthContributorAutoConfiguration#diskSpaceHealthIndicator matched:\n      - @ConditionalOnMissingBean (names: diskSpaceHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration matched:\n      - @ConditionalOnWebApplication (required) found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n\n   EmbeddedWebServerFactoryCustomizerAutoConfiguration.NettyWebServerFactoryCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)\n\n   EndpointAutoConfiguration#endpointCachingOperationInvokerAdvisor matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoker.cache.CachingOperationInvokerAdvisor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   EndpointAutoConfiguration#endpointOperationParameterMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.endpoint.invoke.ParameterValueMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ErrorWebFluxAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.config.WebFluxConfigurer' (OnClassCondition)\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n\n   ErrorWebFluxAutoConfiguration#errorAttributes matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.error.ErrorAttributes; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ErrorWebFluxAutoConfiguration#errorWebExceptionHandler matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.error.ErrorWebExceptionHandler; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   GenericCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.GenericCacheConfiguration automatic cache type (CacheCondition)\n\n   GsonAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.google.gson.Gson' (OnClassCondition)\n\n   GsonAutoConfiguration#gson matched:\n      - @ConditionalOnMissingBean (types: com.google.gson.Gson; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   GsonAutoConfiguration#gsonBuilder matched:\n      - @ConditionalOnMissingBean (types: com.google.gson.GsonBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthContributorAutoConfiguration#pingHealthContributor matched:\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   HealthEndpointAutoConfiguration matched:\n      - @ConditionalOnAvailableEndpoint found property management.endpoint.health.enabled with value true; @ConditionalOnAvailableEndpoint marked as exposed by a 'management.endpoints.web.exposure' property (OnAvailableEndpointCondition)\n\n   HealthEndpointConfiguration#healthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpoint matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthEndpointGroups matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthEndpointGroups; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthHttpCodeStatusMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HttpCodeStatusMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointConfiguration#healthStatusAggregator matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.StatusAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HealthEndpointReactiveWebExtensionConfiguration matched:\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   HealthEndpointReactiveWebExtensionConfiguration#reactiveHealthEndpointWebExtension matched:\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint'; @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthEndpointWebExtension; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientConfiguration.OkHttpClientConfiguration matched:\n      - @ConditionalOnClass found required class 'okhttp3.OkHttpClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.httpclientfactories.ok.enabled) matched (OnPropertyCondition)\n\n   HttpClientConfiguration.OkHttpClientConfiguration#connPoolFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.httpclient.OkHttpClientConnectionPoolFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientConfiguration.OkHttpClientConfiguration#okHttpClientBuilder matched:\n      - @ConditionalOnMissingBean (types: okhttp3.OkHttpClient$Builder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientConfiguration.OkHttpClientConfiguration#okHttpClientFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.commons.httpclient.OkHttpClientFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   HttpClientMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   HttpHandlerAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.web.reactive.DispatcherHandler', 'org.springframework.http.server.reactive.HttpHandler' (OnClassCondition)\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.http.server.reactive.HttpHandler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   InfoContributorAutoConfiguration#envInfoContributor matched:\n      - @ConditionalOnEnabledInfoContributor management.info.defaults.enabled is considered true (OnEnabledInfoContributorCondition)\n\n   JacksonAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.databind.ObjectMapper' (OnClassCondition)\n\n   JacksonAutoConfiguration.Jackson2ObjectMapperBuilderCustomizerConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperBuilderConfiguration#jacksonObjectMapperBuilder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.converter.json.Jackson2ObjectMapperBuilder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.converter.json.Jackson2ObjectMapperBuilder' (OnClassCondition)\n\n   JacksonAutoConfiguration.JacksonObjectMapperConfiguration#jacksonObjectMapper matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.databind.ObjectMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration matched:\n      - @ConditionalOnClass found required class 'com.fasterxml.jackson.module.paramnames.ParameterNamesModule' (OnClassCondition)\n\n   JacksonAutoConfiguration.ParameterNamesModuleConfiguration#parameterNamesModule matched:\n      - @ConditionalOnMissingBean (types: com.fasterxml.jackson.module.paramnames.ParameterNamesModule; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.instrument.MeterRegistry' (OnClassCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#classLoaderMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.ClassLoaderMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmGcMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmGcMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmMemoryMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmMemoryMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   JvmMetricsAutoConfiguration#jvmThreadMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.jvm.JvmThreadMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LegacyHealthEndpointCompatibilityConfiguration#healthAggregator matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthAggregator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LegacyHealthEndpointCompatibilityConfiguration#healthIndicatorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthIndicatorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LegacyHealthEndpointCompatibilityConfiguration#healthStatusHttpMapper matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.HealthStatusHttpMapper; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LegacyHealthEndpointCompatibilityConfiguration.LegacyReactiveHealthEndpointCompatibilityConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Mono' (OnClassCondition)\n\n   LegacyHealthEndpointCompatibilityConfiguration.LegacyReactiveHealthEndpointCompatibilityConfiguration#reactiveHealthIndicatorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthIndicatorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LifecycleMvcEndpointAutoConfiguration#environmentManager matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.environment.EnvironmentManager; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.micrometer.core.instrument.MeterRegistry', 'ch.qos.logback.classic.LoggerContext', 'org.slf4j.LoggerFactory' (OnClassCondition)\n      - LogbackLoggingCondition ILoggerFactory is a Logback LoggerContext (LogbackMetricsAutoConfiguration.LogbackLoggingCondition)\n      - @ConditionalOnBean (types: io.micrometer.core.instrument.MeterRegistry; SearchStrategy: all) found bean 'simpleMeterRegistry' (OnBeanCondition)\n\n   LogbackMetricsAutoConfiguration#logbackMetrics matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.binder.logging.LogbackMetrics; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ManagementContextAutoConfiguration.SameManagementContextConfiguration matched:\n      - Management Port actual port type (SAME) matched required type (OnManagementPortCondition)\n\n   MappingsEndpointAutoConfiguration.ReactiveWebConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.DispatcherHandler' (OnClassCondition)\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n      - @ConditionalOnBean (types: org.springframework.web.reactive.DispatcherHandler; SearchStrategy: all) found bean 'webHandler' (OnBeanCondition)\n\n   MetricsAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'io.micrometer.core.annotation.Timed' (OnClassCondition)\n\n   MetricsAutoConfiguration#micrometerClock matched:\n      - @ConditionalOnMissingBean (types: io.micrometer.core.instrument.Clock; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'com.mongodb.MongoClient' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDbFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoAutoConfiguration#mongo matched:\n      - @ConditionalOnMissingBean (types: com.mongodb.MongoClient,com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoDataAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'com.mongodb.MongoClient', 'com.mongodb.client.MongoClient', 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)\n\n   MongoDataConfiguration#mongoCustomConversions matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoCustomConversions; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoDataConfiguration#mongoMappingContext matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.mapping.MongoMappingContext; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoDbFactoryConfiguration matched:\n      - AnyNestedCondition 1 matched 1 did not; NestedCondition on MongoDbFactoryConfiguration.AnyMongoClientAvailable.FallbackClientAvailable @ConditionalOnBean (types: com.mongodb.client.MongoClient; SearchStrategy: all) did not find any beans of type com.mongodb.client.MongoClient; NestedCondition on MongoDbFactoryConfiguration.AnyMongoClientAvailable.PreferredClientAvailable @ConditionalOnBean (types: com.mongodb.MongoClient; SearchStrategy: all) found bean 'mongo' (MongoDbFactoryConfiguration.AnyMongoClientAvailable)\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.MongoDbFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoDbFactoryDependentConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.data.mongodb.MongoDbFactory; SearchStrategy: all) found bean 'mongoDbFactory' (OnBeanCondition)\n\n   MongoDbFactoryDependentConfiguration#gridFsTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.GridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoDbFactoryDependentConfiguration#mappingMongoConverter matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.convert.MongoConverter; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoDbFactoryDependentConfiguration#mongoTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.MongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.data.mongodb.core.MongoTemplate' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.MongoTemplate; SearchStrategy: all) found bean 'mongoTemplate' (OnBeanCondition)\n\n   MongoReactiveAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'com.mongodb.reactivestreams.client.MongoClient', 'reactor.core.publisher.Flux' (OnClassCondition)\n\n   MongoReactiveAutoConfiguration#reactiveStreamsMongoClient matched:\n      - @ConditionalOnMissingBean (types: com.mongodb.reactivestreams.client.MongoClient; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoReactiveAutoConfiguration.NettyDriverConfiguration matched:\n      - @ConditionalOnClass found required classes 'io.netty.channel.socket.SocketChannel', 'io.netty.channel.nio.NioEventLoopGroup' (OnClassCondition)\n\n   MongoReactiveDataAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'com.mongodb.reactivestreams.client.MongoClient', 'org.springframework.data.mongodb.core.ReactiveMongoTemplate' (OnClassCondition)\n      - @ConditionalOnBean (types: com.mongodb.reactivestreams.client.MongoClient; SearchStrategy: all) found bean 'reactiveStreamsMongoClient' (OnBeanCondition)\n\n   MongoReactiveDataAutoConfiguration#dataBufferFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.core.io.buffer.DataBufferFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoReactiveDataAutoConfiguration#reactiveGridFsTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.gridfs.ReactiveGridFsOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoReactiveDataAutoConfiguration#reactiveMongoDatabaseFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.ReactiveMongoDatabaseFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoReactiveDataAutoConfiguration#reactiveMongoTemplate matched:\n      - @ConditionalOnMissingBean (types: org.springframework.data.mongodb.core.ReactiveMongoOperations; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   MongoReactiveHealthContributorAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.data.mongodb.core.ReactiveMongoTemplate', 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n      - @ConditionalOnBean (types: org.springframework.data.mongodb.core.ReactiveMongoTemplate; SearchStrategy: all) found bean 'reactiveMongoTemplate' (OnBeanCondition)\n\n   MongoReactiveHealthContributorAutoConfiguration#mongoHealthContributor matched:\n      - @ConditionalOnMissingBean (names: mongoHealthIndicator,mongoHealthContributor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   NoOpCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.NoOpCacheConfiguration automatic cache type (CacheCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor' (OnClassCondition)\n\n   PersistenceExceptionTranslationAutoConfiguration#persistenceExceptionTranslationPostProcessor matched:\n      - @ConditionalOnProperty (spring.dao.exceptiontranslation.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.dao.annotation.PersistenceExceptionTranslationPostProcessor; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   PropertyPlaceholderAutoConfiguration#propertySourcesPlaceholderConfigurer matched:\n      - @ConditionalOnMissingBean (types: org.springframework.context.support.PropertySourcesPlaceholderConfigurer; SearchStrategy: current) did not find any beans (OnBeanCondition)\n\n   ReactiveCommonsClientAutoConfiguration.ReactiveDiscoveryLoadBalancerConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.health.ReactiveHealthIndicator', 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.ReactiveDiscoveryClient; SearchStrategy: all) found beans 'simpleReactiveDiscoveryClient', 'reactiveCompositeDiscoveryClient' (OnBeanCondition)\n\n   ReactiveCommonsClientAutoConfiguration.ReactiveDiscoveryLoadBalancerConfiguration#reactiveDiscoveryClients matched:\n      - @ConditionalOnProperty (spring.cloud.discovery.client.composite-indicator.enabled) matched (OnPropertyCondition)\n      - @ConditionalOnBean (types: org.springframework.cloud.client.discovery.health.reactive.ReactiveDiscoveryHealthIndicator; SearchStrategy: all) found bean 'simpleReactiveDiscoveryClientHealthIndicator' (OnBeanCondition)\n\n   ReactiveCompositeDiscoveryClientAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.web.reactive.function.client.WebClient' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.discovery.enabled) matched; @ConditionalOnProperty (spring.cloud.discovery.reactive.enabled) matched (OnPropertyCondition)\n\n   ReactiveHealthEndpointConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n      - @ConditionalOnBean (types: org.springframework.boot.actuate.health.HealthEndpoint; SearchStrategy: all) found bean 'healthEndpoint' (OnBeanCondition)\n\n   ReactiveHealthEndpointConfiguration#reactiveHealthContributorRegistry matched:\n      - @ConditionalOnMissingBean (types: org.springframework.boot.actuate.health.ReactiveHealthContributorRegistry; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ReactiveManagementContextAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'reactor.core.publisher.Flux' (OnClassCondition)\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n\n   ReactiveWebServerFactoryAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.http.ReactiveHttpInputMessage' (OnClassCondition)\n      - found ConfigurableReactiveWebEnvironment (OnWebApplicationCondition)\n\n   ReactiveWebServerFactoryConfiguration.EmbeddedNetty matched:\n      - @ConditionalOnClass found required class 'reactor.netty.http.server.HttpServer' (OnClassCondition)\n      - @ConditionalOnMissingBean (types: org.springframework.boot.web.reactive.server.ReactiveWebServerFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   ReactiveWebServerFactoryConfiguration.EmbeddedNetty#reactorServerResourceFactory matched:\n      - @ConditionalOnMissingBean (types: org.springframework.http.client.reactive.ReactorResourceFactory; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RefreshAutoConfiguration matched:\n      - @ConditionalOnClass found required class 'org.springframework.cloud.context.scope.refresh.RefreshScope' (OnClassCondition)\n      - @ConditionalOnProperty (spring.cloud.refresh.enabled) matched (OnPropertyCondition)\n\n   RefreshAutoConfiguration#contextRefresher matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.refresh.ContextRefresher; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RefreshAutoConfiguration#loggingRebinder matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.logging.LoggingRebinder; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RefreshAutoConfiguration#refreshScope matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.context.scope.refresh.RefreshScope; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   RefreshEndpointAutoConfiguration matched:\n      - @ConditionalOnClass found required classes 'org.springframework.boot.actuate.autoconfigure.endpoint.EndpointAutoConfiguration', 'org.springframework.boot.actuate.health.Health' (OnClassCondition)\n\n   RefreshEndpointAutoConfiguration#refreshScopeHealthIndicator matched:\n      - @ConditionalOnMissingBean (types: org.springframework.cloud.health.RefreshScopeHealthIndicator; SearchStrategy: all) did not find any beans (OnBeanCondition)\n      - @ConditionalOnEnabledHealthIndicator management.health.defaults.enabled is considered true (OnEnabledHealthIndicatorCondition)\n\n   RefreshEndpointAutoConfiguration.RefreshEndpointConfiguration matched:\n      - @ConditionalOnBean (types: org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration; SearchStrategy: all) found bean 'org.springframework.cloud.bootstrap.config.PropertySourceBootstrapConfiguration' (OnBeanCondition)\n\n   RestartEndpointWithoutIntegrationConfiguration matched:\n      - @ConditionalOnMissingClass did not find unwanted class 'org.springframework.integration.monitor.IntegrationMBeanExporter' (OnClassCondition)\n\n   SamplerAutoConfiguration.RefreshScopedSamplerConfiguration matched:\n      - AnyNestedCondition 1 matched 2 did not; NestedCondition on SamplerCondition.TracingCustomizerAvailable @ConditionalOnBean (types: brave.TracingCustomizer; SearchStrategy: all) did not find any beans of type brave.TracingCustomizer; NestedCondition on SamplerCondition.SpanHandlerAvailable @ConditionalOnBean (types: brave.handler.SpanHandler; SearchStrategy: all) found bean 'tagPropagationSpanHandler'; NestedCondition on SamplerCondition.ReporterAvailable @ConditionalOnBean (types: zipkin2.reporter.Reporter; SearchStrategy: all) did not find any beans of type zipkin2.reporter.Reporter (SamplerCondition)\n      - @ConditionalOnBean (types: org.springframework.cloud.context.scope.refresh.RefreshScope; SearchStrategy: all) found bean 'refreshScope' (OnBeanCondition)\n\n   SamplerAutoConfiguration.RefreshScopedSamplerConfiguration#defaultTraceSampler matched:\n      - @ConditionalOnMissingBean (types: brave.sampler.Sampler; SearchStrategy: all) did not find any beans (OnBeanCondition)\n\n   SimpleCacheConfiguration matched:\n      - Cache org.springframework.boot.autoconfigure.cache.SimpleCacheConfiguration automatic cache type (CacheCondition)\n\n   SimpleDisco","log_level":"DEBUG","thread_name":"main","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener"}
#JSON# {"date":"15/04/2021 14:17:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Application run failed","log_level":"ERROR","thread_name":"main","class":"org.springframework.boot.SpringApplication","throwable":{"stacktrace":"at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)\nat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:228)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\nat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\nat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\nat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\nat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\nat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:895)\nat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)\nat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)\nat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)\nat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\nat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)\nat br.com.b2sky.infra.StarWarApplication.main(StarWarApplication.java:18)","exception_class":"org.springframework.beans.factory.UnsatisfiedDependencyException","exception_message":"Error creating bean with name 'webApiService' defined in URL [jar:file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar!/br/com/b2sky/infra/api/WebApiService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blockingWebApiRepository': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDbFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]"}}
