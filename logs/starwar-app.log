#JSON# {"date":"14/04/2021 16:51:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 16:51:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 241ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 20ms. Found 4 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 16:51:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=bd6e7d93-00ee-3983-a1a4-a9b156bf8776","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:527721}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607747d9665c6859b1c20761', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:527720}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607747d8665c6859b1c20760', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:527722}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:527723}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nUsing generated security password: 95fd20f7-b55b-487b-be07-f2fbe0c5b4eb\n","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"}
#JSON# {"date":"14/04/2021 16:51:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 16:51:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 16:51:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 9.247 seconds (JVM running for 10.338)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 17:23:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:527722}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 17:23:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:527723}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:46:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:46:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 310ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 31ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:46:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=b08ee39b-7121-3498-81e8-a3ef29b34896","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:46:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:46:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:46:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'webApiService' defined in URL [jar:file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar!/br/com/b2sky/infra/api/WebApiService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blockingWebApiRepository': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDbFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]","log_level":"WARN","thread_name":"main","class":"org.springframework.boot.web.reactive.context.AnnotationConfigReactiveWebServerApplicationContext"}
#JSON# {"date":"14/04/2021 19:46:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Unexpected exception during asynchronous execution","log_level":"ERROR","thread_name":"cluster-607770b0e1593b0f9c2abc7e","class":"org.springframework.data.mongodb.core.ReactiveMongoTemplate","throwable":{"stacktrace":"at org.springframework.data.mongodb.core.MongoExceptionTranslator.translateExceptionIfPossible(MongoExceptionTranslator.java:138)\nat org.springframework.data.mongodb.core.ReactiveMongoTemplate.potentiallyConvertRuntimeException(ReactiveMongoTemplate.java:2777)\nat org.springframework.data.mongodb.core.ReactiveMongoTemplate.lambda$translateException$87(ReactiveMongoTemplate.java:2760)\nat reactor.core.publisher.Flux.lambda$onErrorMap$28(Flux.java:6504)\nat reactor.core.publisher.FluxOnErrorResume$ResumeSubscriber.onError(FluxOnErrorResume.java:88)\nat reactor.core.publisher.MonoFlatMapMany$FlatMapManyInner.onError(MonoFlatMapMany.java:247)\nat com.mongodb.reactivestreams.client.internal.SingleResultObservableToPublisher$1.onError(SingleResultObservableToPublisher.java:50)\nat com.mongodb.reactivestreams.client.internal.ObservableToPublisher$1.onError(ObservableToPublisher.java:71)\nat com.mongodb.async.client.AbstractSubscription.onError(AbstractSubscription.java:129)\nat com.mongodb.async.client.SingleResultCallbackSubscription$1.onResult(SingleResultCallbackSubscription.java:42)\nat com.mongodb.async.client.MongoCollectionImpl$7.onResult(MongoCollectionImpl.java:921)\nat com.mongodb.async.client.MongoCollectionImpl$7.onResult(MongoCollectionImpl.java:917)\nat com.mongodb.async.client.MongoCollectionImpl$9.onResult(MongoCollectionImpl.java:980)\nat com.mongodb.async.client.MongoCollectionImpl$9.onResult(MongoCollectionImpl.java:976)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.async.client.OperationExecutorImpl$2$1$1.onResult(OperationExecutorImpl.java:140)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.operation.CreateIndexesOperation$2.call(CreateIndexesOperation.java:194)\nat com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionCallback.onResult(OperationHelper.java:569)\nat com.mongodb.operation.OperationHelper$AsyncCallableWithConnectionCallback.onResult(OperationHelper.java:561)\nat com.mongodb.internal.async.ErrorHandlingResultCallback.onResult(ErrorHandlingResultCallback.java:49)\nat com.mongodb.binding.AsyncClusterBinding$1.onResult(AsyncClusterBinding.java:111)\nat com.mongodb.binding.AsyncClusterBinding$1.onResult(AsyncClusterBinding.java:107)\nat com.mongodb.internal.connection.BaseCluster$ServerSelectionRequest.onResult(BaseCluster.java:440)\nat com.mongodb.internal.connection.BaseCluster$WaitQueueHandler.run(BaseCluster.java:512)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"org.springframework.data.mongodb.UncategorizedMongoDbException","exception_message":"Shutdown in progress; nested exception is com.mongodb.MongoClientException: Shutdown in progress"}}
#JSON# {"date":"14/04/2021 19:46:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener"}
#JSON# {"date":"14/04/2021 19:46:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Application run failed","log_level":"ERROR","thread_name":"main","class":"org.springframework.boot.SpringApplication","throwable":{"stacktrace":"at org.springframework.beans.factory.support.ConstructorResolver.createArgumentArray(ConstructorResolver.java:798)\nat org.springframework.beans.factory.support.ConstructorResolver.autowireConstructor(ConstructorResolver.java:228)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.autowireConstructor(AbstractAutowireCapableBeanFactory.java:1358)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBeanInstance(AbstractAutowireCapableBeanFactory.java:1204)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.doCreateBean(AbstractAutowireCapableBeanFactory.java:557)\nat org.springframework.beans.factory.support.AbstractAutowireCapableBeanFactory.createBean(AbstractAutowireCapableBeanFactory.java:517)\nat org.springframework.beans.factory.support.AbstractBeanFactory.lambda$doGetBean$0(AbstractBeanFactory.java:323)\nat org.springframework.beans.factory.support.DefaultSingletonBeanRegistry.getSingleton(DefaultSingletonBeanRegistry.java:226)\nat org.springframework.beans.factory.support.AbstractBeanFactory.doGetBean(AbstractBeanFactory.java:321)\nat org.springframework.beans.factory.support.AbstractBeanFactory.getBean(AbstractBeanFactory.java:202)\nat org.springframework.beans.factory.support.DefaultListableBeanFactory.preInstantiateSingletons(DefaultListableBeanFactory.java:895)\nat org.springframework.context.support.AbstractApplicationContext.finishBeanFactoryInitialization(AbstractApplicationContext.java:878)\nat org.springframework.context.support.AbstractApplicationContext.refresh(AbstractApplicationContext.java:550)\nat org.springframework.boot.web.reactive.context.ReactiveWebServerApplicationContext.refresh(ReactiveWebServerApplicationContext.java:66)\nat org.springframework.boot.SpringApplication.refresh(SpringApplication.java:747)\nat org.springframework.boot.SpringApplication.refreshContext(SpringApplication.java:397)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:315)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:1226)\nat org.springframework.boot.SpringApplication.run(SpringApplication.java:1215)\nat br.com.b2sky.infra.StarWarApplication.main(StarWarApplication.java:18)","exception_class":"org.springframework.beans.factory.UnsatisfiedDependencyException","exception_message":"Error creating bean with name 'webApiService' defined in URL [jar:file:/home/luiz.philip/.m2/repository/b2w/b2sky/b2sky-core/2.3.13.AWS.RELEASE/b2sky-core-2.3.13.AWS.RELEASE.jar!/br/com/b2sky/infra/api/WebApiService.class]: Unsatisfied dependency expressed through constructor parameter 1; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'blockingWebApiRepository': Cannot resolve reference to bean 'mongoTemplate' while setting bean property 'mongoOperations'; nested exception is org.springframework.beans.factory.BeanCreationException: Error creating bean with name 'mongoTemplate' defined in class path resource [org/springframework/boot/autoconfigure/data/mongo/MongoDbFactoryDependentConfiguration.class]: Bean instantiation via factory method failed; nested exception is org.springframework.beans.BeanInstantiationException: Failed to instantiate [org.springframework.data.mongodb.core.MongoTemplate]: Factory method 'mongoTemplate' threw exception; nested exception is org.springframework.dao.DataAccessResourceFailureException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]; nested exception is com.mongodb.MongoTimeoutException: Timed out after 30000 ms while waiting to connect. Client view of cluster state is {type=UNKNOWN, servers=[{address=10.2.166.153:27002, type=UNKNOWN, state=CONNECTING, exception={com.mongodb.MongoSocketOpenException: Exception opening socket}, caused by {java.net.SocketTimeoutException: connect timed out}}]"}}
#JSON# {"date":"14/04/2021 19:48:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:48:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 394ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 38ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:48:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=b08ee39b-7121-3498-81e8-a3ef29b34896","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:48:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:48:44.044","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532086}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077714a5367bf278a96b9bb', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:45.045","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532087}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077714b5367bf278a96b9bc', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:45.045","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532092}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532091}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:48:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nUsing generated security password: 6605c2ee-6b10-4d25-ae02-cff5fa0f16c3\n","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"}
#JSON# {"date":"14/04/2021 19:48:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:48:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:48:52.052","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 16.432 seconds (JVM running for 17.819)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:49:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 290ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 28ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:49:55.055","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=b08ee39b-7121-3498-81e8-a3ef29b34896","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:49:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532122}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777195ff656c3c8b526920', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:49:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532121}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777195ff656c3c8b52691f', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:49:58.058","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:49:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532123}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:49:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:50:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532124}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:50:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nUsing generated security password: 5d51d198-e638-4687-85e7-7acd02b093b0\n","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.security.reactive.ReactiveUserDetailsServiceAutoConfiguration"}
#JSON# {"date":"14/04/2021 19:50:01.001","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:50:02.002","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:50:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 11.455 seconds (JVM running for 12.949)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:52:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 312ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 26ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:52:36.036","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:52:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532201}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772379267196e86e8a5ed', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532200}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772369267196e86e8a5ec', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:39.039","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:52:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532202}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:52:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532203}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:52:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:52:44.044","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:52:44.044","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 12.323 seconds (JVM running for 14.07)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:52:51.051","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[da1d911f-1]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.result.method.annotation.PathVariableMethodArgumentResolver.handleMissingValue(PathVariableMethodArgumentResolver.java:96)","exception_class":"org.springframework.web.server.ServerErrorException","exception_message":"500 INTERNAL_SERVER_ERROR \"id\""}}
#JSON# {"date":"14/04/2021 19:53:47.047","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:53:48.048","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 315ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:49.049","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 27ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:53:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:53:52.052","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:53:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532236}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='60777280ef66234aef09b5af', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:53.053","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532237}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='6077727fef66234aef09b5ae', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:54.054","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:53:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532238}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532239}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:53:57.057","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:53:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:53:59.059","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 14.853 seconds (JVM running for 17.009)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:54:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 403ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 26ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 19:54:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 19:54:34.034","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:54:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532247}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772a9525d587a7102558b', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532246}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607772a9525d587a7102558a', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 19:54:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532248}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532249}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 19:54:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 19:54:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 19:54:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 13.809 seconds (JVM running for 15.606)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 19:55:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-1]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"nioEventLoopGroup-2-2","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at reactor.core.publisher.MonoTakeLastOne$TakeLastOneSubscriber.onComplete(MonoTakeLastOne.java:102)","exception_class":"java.util.NoSuchElementException","exception_message":"Flux#last() didn't observe any onNext signal"}}
#JSON# {"date":"14/04/2021 19:55:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-2]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 19:58:22.022","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-3]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-1","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:01:46.046","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-4]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-2","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:02:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-5]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:03:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-6]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:04:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"[a4eae7aa-7]  500 Server Error for HTTP GET \"/planets?name=Tatooine\"","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"org.springframework.boot.autoconfigure.web.reactive.error.AbstractErrorWebExceptionHandler","throwable":{"stacktrace":"at org.springframework.web.reactive.function.BodyExtractors.lambda$readWithMessageReaders$12(BodyExtractors.java:201)","exception_class":"org.springframework.web.reactive.function.UnsupportedMediaTypeException","exception_message":"Content type 'text/html;charset=utf-8' not supported for bodyType=br.com.b2sky.infra.starwarapi.beans.PlanetsPage"}}
#JSON# {"date":"14/04/2021 20:07:36.036","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 260ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:37.037","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 22ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:07:38.038","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:07:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532559}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607775bb2e32ed68063a66f9', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532558}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607775bb2e32ed68063a66f8', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:40.040","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:07:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:07:41.041","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532560}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:42.042","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532561}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:07:42.042","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:07:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:07:43.043","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 8.399 seconds (JVM running for 9.705)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:19:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:532561}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:00.000","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:532560}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 236ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 20ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:19:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532803}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607778705cf93947c14b0ed3', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532802}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607778705cf93947c14b0ed2', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:19:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532804}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:19:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532807}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:19:15.015","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:19:16.016","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:19:17.017","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 8.506 seconds (JVM running for 9.555)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:24:24.024","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 225ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 21ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:24:25.025","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:24:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532909}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779ab1423264361880853', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532910}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779ab1423264361880854', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:27.027","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:24:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532912}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:28.028","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:24:29.029","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532914}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:30.030","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:24:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\nError starting ApplicationContext. To display the conditions report re-run your application with 'debug' enabled.","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.autoconfigure.logging.ConditionEvaluationReportLoggingListener"}
#JSON# {"date":"14/04/2021 20:24:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:532914}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:31.031","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:532912}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:35.035","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"\n\n***************************\nAPPLICATION FAILED TO START\n***************************\n\nDescription:\n\nWeb server failed to start. Port 8080 was already in use.\n\nAction:\n\nIdentify and stop the process that's listening on port 8080 or configure this application to listen on another port.\n","log_level":"ERROR","thread_name":"main","class":"org.springframework.boot.diagnostics.LoggingFailureAnalysisReporter"}
#JSON# {"date":"14/04/2021 20:24:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:4, serverValue:532807}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:24:50.050","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Closed connection [connectionId{localValue:3, serverValue:532804}] to 10.2.166.153:27002 because the pool has been closed.","log_level":"INFO","thread_name":"SpringContextShutdownHook","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:03.003","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"The following profiles are active: hmg","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:25:04.004","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 381ms. Found 1 MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Bootstrapping Spring Data Reactive MongoDB repositories in DEFAULT mode.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Finished Spring Data repository scanning in 39ms. Found 5 Reactive MongoDB repository interfaces.","log_level":"INFO","thread_name":"main","class":"org.springframework.data.repository.config.RepositoryConfigurationDelegate"}
#JSON# {"date":"14/04/2021 20:25:06.006","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"BeanFactory id=a7b0f47d-59e1-30ad-bd33-919b32892576","log_level":"INFO","thread_name":"main","class":"org.springframework.cloud.context.scope.GenericScope"}
#JSON# {"date":"14/04/2021 20:25:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:2, serverValue:532921}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779d49e4c39264cc6f0c8', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:1, serverValue:532920}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"cluster-ClusterId{value='607779d39e4c39264cc6f0c7', description='null'}-10.2.166.153:27002","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:08.008","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.ReactiveMongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:25:09.009","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:3, serverValue:532923}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"nioEventLoopGroup-2-2","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:10.010","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Automatic index creation will be disabled by default as of Spring Data MongoDB 3.x.\n\tPlease use 'MongoMappingContext#setAutoIndexCreation(boolean)' or override 'MongoConfigurationSupport#autoIndexCreation()' to be explicit.\n\tHowever, we recommend setting up indices manually in an application ready block. You may use index derivation there as well.\n\n\t> -----------------------------------------------------------------------------------------\n\t> @EventListener(ApplicationReadyEvent.class)\n\t> public void initIndicesAfterStartup() {\n\t>\n\t>     IndexOperations indexOps = mongoTemplate.indexOps(DomainType.class);\n\t>\n\t>     IndexResolver resolver = new MongoPersistentEntityIndexResolver(mongoMappingContext);\n\t>     resolver.resolveIndexFor(DomainType.class).forEach(indexOps::ensureIndex);\n\t> }\n\t> -----------------------------------------------------------------------------------------\n","log_level":"WARN","thread_name":"main","class":"org.springframework.data.mongodb.core.index.MongoPersistentEntityIndexCreator"}
#JSON# {"date":"14/04/2021 20:25:11.011","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Opened connection [connectionId{localValue:4, serverValue:532927}] to 10.2.166.153:27002","log_level":"INFO","thread_name":"main","class":"org.mongodb.driver.connection"}
#JSON# {"date":"14/04/2021 20:25:12.012","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Exposing 2 endpoint(s) beneath base path ''","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.actuate.endpoint.web.EndpointLinksResolver"}
#JSON# {"date":"14/04/2021 20:25:13.013","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Netty started on port(s): 8080","log_level":"INFO","thread_name":"main","class":"org.springframework.boot.web.embedded.netty.NettyWebServer"}
#JSON# {"date":"14/04/2021 20:25:14.014","hostname":"brrjobitanl1350","application":"starwar-app","version":"2.11.2","environment":"b2sky","brand":"b2sky","log_message":"Started StarWarApplication in 13.943 seconds (JVM running for 17.431)","log_level":"INFO","thread_name":"main","class":"br.com.b2sky.infra.StarWarApplication"}
#JSON# {"date":"14/04/2021 20:25:33.033","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:25:56.056","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-1","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:26:02.002","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-2","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:26:05.005","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-3","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
#JSON# {"date":"14/04/2021 20:26:07.007","hostname":"brrjobitanl1350","application":"starwar-app","version":"1.5.0.M2","environment":"b2sky","brand":"b2sky","log_message":"Planeta nao encontrado","traceId":"6021768c727ba87d93034a4c942c5cdc","spanId":72727,"spanExportable":true,"X-Span-Export":true,"X-B3-SpanId":72727,"X-B3-TraceId":"6021768c727ba87d93034a4c942c5cdc","uid":"","integration-name":"","log_level":"ERROR","thread_name":"reactor-http-epoll-4","class":"br.com.b2sky.infra.controller.PlanetController","throwable":{"stacktrace":"at br.com.b2sky.infra.service.PlanetService.planetNotFound(PlanetService.java:48)\nat br.com.b2sky.infra.service.PlanetService.getPlanetFromSWAPI(PlanetService.java:42)\nat br.com.b2sky.infra.service.PlanetService.find(PlanetService.java:33)\nat reactor.core.publisher.MonoFlatMap$FlatMapMain.onNext(MonoFlatMap.java:118)\nat org.springframework.cloud.sleuth.instrument.reactor.ScopePassingSpanSubscriber.onNext(ScopePassingSpanSubscriber.java:90)\nat reactor.core.publisher.MonoPublishOn$PublishOnSubscriber.run(MonoPublishOn.java:178)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:68)\nat reactor.core.scheduler.SchedulerTask.call(SchedulerTask.java:28)\nat java.util.concurrent.FutureTask.run(FutureTask.java:266)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.access$201(ScheduledThreadPoolExecutor.java:180)\nat java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:293)\nat java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1149)\nat java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:624)\nat java.lang.Thread.run(Thread.java:748)","exception_class":"br.com.b2sky.infra.errors.PlanetNotFoundException"}}
